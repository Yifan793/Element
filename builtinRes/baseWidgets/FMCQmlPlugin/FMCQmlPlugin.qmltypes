import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'QMLPLUGINDUMP -nonrelocatable FMCQmlPlugin 1.0 ./'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComAccordionBox 1.0"
        exports: ["FMCQmlPlugin/ComAccordionBox 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "accordionContent"
        Property { name: "bExpand"; type: "bool" }
        Property { name: "titleText"; type: "string" }
        Property { name: "titleTips"; type: "string" }
        Property { name: "expandTips"; type: "string" }
        Property { name: "isShowGroupHead"; type: "bool" }
        Property { name: "contentHeight"; type: "int" }
        Property { name: "tipsWidth"; type: "QVariant" }
        Property { name: "boxTitleHeight"; type: "double" }
        Property { name: "accordionContent"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComBubbleMessageBox 1.0"
        exports: ["FMCQmlPlugin/ComBubbleMessageBox 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "radius"; type: "QVariant" }
        Property { name: "vertexX"; type: "QVariant" }
        Property { name: "vertexY"; type: "QVariant" }
        Property { name: "arrowHeight"; type: "QVariant" }
        Property { name: "arrowWidth"; type: "QVariant" }
        Property { name: "color"; type: "QVariant" }
        Property { name: "borderColor"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComButton 1.0"
        exports: ["FMCQmlPlugin/ComButton 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "isEnable"; type: "bool" }
        Property { name: "isHovered"; type: "bool" }
        Property { name: "isChecked"; type: "bool" }
        Property { name: "isFocused"; type: "bool" }
        Property { name: "isPressed"; type: "bool" }
        Property { name: "style"; type: "QVariant" }
        Property { name: "cusstyle"; type: "QVariant" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "title"; type: "string" }
        Property { name: "titleSize"; type: "int" }
        Property { name: "fontBold"; type: "bool" }
        Property { name: "textALign"; type: "string" }
        Signal { name: "clicked" }
        Signal {
            name: "hovered"
            Parameter { name: "bhovered"; type: "bool" }
        }
        Method {
            name: "getColor"
            type: "QVariant"
            Parameter { name: "bIsEnable"; type: "QVariant" }
            Parameter { name: "bIsChecked"; type: "QVariant" }
            Parameter { name: "bIsHovered"; type: "QVariant" }
            Parameter { name: "bIsPressed"; type: "QVariant" }
            Parameter { name: "isFocused"; type: "QVariant" }
        }
        Method {
            name: "getTextColor"
            type: "QVariant"
            Parameter { name: "bIsEnable"; type: "QVariant" }
            Parameter { name: "bIsChecked"; type: "QVariant" }
            Parameter { name: "bIsHovered"; type: "QVariant" }
        }
        Method {
            name: "setTitle"
            type: "QVariant"
            Parameter { name: "titleStr"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComButtonArea 1.0"
        exports: ["FMCQmlPlugin/ComButtonArea 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "bOkEnable"; type: "bool" }
        Property { name: "bCancelEnable"; type: "bool" }
        Property { name: "style"; type: "QVariant" }
        Property { name: "okText"; type: "string" }
        Property { name: "cancelText"; type: "string" }
        Signal { name: "sigOkClicked" }
        Signal { name: "sigCancelClicked" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComButtonWithImage 1.0"
        exports: ["FMCQmlPlugin/ComButtonWithImage 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "textStyle"; type: "QVariant" }
        Property { name: "normalImage"; type: "string" }
        Property { name: "pressedImage"; type: "string" }
        Property { name: "disableImage"; type: "string" }
        Property { name: "imageWidth"; type: "QVariant" }
        Property { name: "imageHeight"; type: "QVariant" }
        Property { name: "bottomText"; type: "string" }
        Property { name: "isHaveBottomText"; type: "bool" }
        Property { name: "isEnable"; type: "bool" }
        Property { name: "isHovered"; type: "bool" }
        Property { name: "isChecked"; type: "bool" }
        Property { name: "isFocused"; type: "bool" }
        Property { name: "isPressed"; type: "bool" }
        Property { name: "style"; type: "QVariant" }
        Property { name: "cusstyle"; type: "QVariant" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "title"; type: "string" }
        Property { name: "titleSize"; type: "int" }
        Property { name: "fontBold"; type: "bool" }
        Property { name: "textALign"; type: "string" }
        Signal { name: "clicked" }
        Signal {
            name: "hovered"
            Parameter { name: "bhovered"; type: "bool" }
        }
        Method {
            name: "getColor"
            type: "QVariant"
            Parameter { name: "bIsEnable"; type: "QVariant" }
            Parameter { name: "bIsChecked"; type: "QVariant" }
            Parameter { name: "bIsHovered"; type: "QVariant" }
            Parameter { name: "bIsPressed"; type: "QVariant" }
            Parameter { name: "isFocused"; type: "QVariant" }
        }
        Method {
            name: "getTextColor"
            type: "QVariant"
            Parameter { name: "bIsEnable"; type: "QVariant" }
            Parameter { name: "bIsChecked"; type: "QVariant" }
            Parameter { name: "bIsHovered"; type: "QVariant" }
        }
        Method {
            name: "setTitle"
            type: "QVariant"
            Parameter { name: "titleStr"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickImage"
        name: "FMCQmlPlugin/ComButtonWithImage_Style2 1.0"
        exports: ["FMCQmlPlugin/ComButtonWithImage_Style2 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Signal { name: "hoveredChanged" }
        Signal { name: "entered" }
        Signal { name: "exited" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComButtonWithImage_Style3 1.0"
        exports: ["FMCQmlPlugin/ComButtonWithImage_Style3 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "__pressed"; type: "bool" }
        Property { name: "disabled"; type: "bool" }
        Property { name: "checkResult"; type: "QVariant" }
        Property { name: "bHovered"; type: "bool" }
        Property { name: "style"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "iconPath"; type: "QUrl" }
        Signal { name: "sigClicked" }
        Signal { name: "sigEntered" }
        Signal { name: "sigExited" }
        Method { name: "getColor"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickImage"
        name: "FMCQmlPlugin/ComColorAlphaBar 1.0"
        exports: ["FMCQmlPlugin/ComColorAlphaBar 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "iconPos"; type: "double" }
        Signal {
            name: "sigAlphaChanged"
            Parameter { name: "alpha"; type: "double" }
        }
        Signal {
            name: "sigAlphaChangeOver"
            Parameter { name: "alpha"; type: "double" }
        }
        Method {
            name: "notifyAlphaChanged"
            type: "QVariant"
            Parameter { name: "mouseX"; type: "QVariant" }
        }
        Method {
            name: "notifyAlphaChangeOver"
            type: "QVariant"
            Parameter { name: "mouseX"; type: "QVariant" }
        }
        Method {
            name: "setAlpha"
            type: "QVariant"
            Parameter { name: "alpha"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComColorHexTextInput 1.0"
        exports: ["FMCQmlPlugin/ComColorHexTextInput 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "maxLength"; type: "int" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "placeholder"; type: "string" }
        Property { name: "isHovered"; type: "bool" }
        Property { name: "text"; type: "string" }
        Property { name: "textInputId"; type: "QQuickTextInput"; isReadonly: true; isPointer: true }
        Signal { name: "sigTextInputFocusIn" }
        Signal { name: "sigTextInputFocusOut" }
        Signal {
            name: "sigTextChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setText"
            type: "QVariant"
            Parameter { name: "strText"; type: "QVariant" }
        }
        Method { name: "getText"; type: "QVariant" }
        Method { name: "forceActiveFocus"; type: "QVariant" }
        Method {
            name: "keyOnPressedFilter"
            type: "QVariant"
            Parameter { name: "event"; type: "QVariant" }
        }
    }
    Component {
        prototype: "FMCQColorHsbBar"
        name: "FMCQmlPlugin/ComColorHsbBar 1.0"
        exports: ["FMCQmlPlugin/ComColorHsbBar 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "iconPos"; type: "double" }
        Signal {
            name: "sigHSBChanged"
            Parameter { name: "hsbObj"; type: "QVariant" }
        }
        Signal {
            name: "sigHSBChangeOver"
            Parameter { name: "hsbObj"; type: "QVariant" }
        }
        Method { name: "notifyHChanged"; type: "QVariant" }
        Method { name: "notifyHChangeOver"; type: "QVariant" }
        Method {
            name: "initByColorObj"
            type: "QVariant"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Method {
            name: "setColor"
            type: "QVariant"
            Parameter { name: "hsbColorObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComColorOneValueTextInput 1.0"
        exports: ["FMCQmlPlugin/ComColorOneValueTextInput 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "maxLength"; type: "int" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "placeholder"; type: "string" }
        Property { name: "isHovered"; type: "bool" }
        Property { name: "text"; type: "string" }
        Property { name: "textInputId"; type: "QQuickTextInput"; isReadonly: true; isPointer: true }
        Signal { name: "sigTextInputFocusIn" }
        Signal { name: "sigTextInputFocusOut" }
        Signal {
            name: "sigTextChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setText"
            type: "QVariant"
            Parameter { name: "strText"; type: "QVariant" }
        }
        Method { name: "getText"; type: "QVariant" }
        Method { name: "forceActiveFocus"; type: "QVariant" }
        Method {
            name: "keyOnPressedFilter"
            type: "QVariant"
            Parameter { name: "event"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComColorRecommandArea 1.0"
        exports: ["FMCQmlPlugin/ComColorRecommandArea 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "items"; type: "QVariant" }
        Signal {
            name: "sigSelectColor"
            Parameter { name: "strColorName"; type: "string" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComColorSelect 1.0"
        exports: ["FMCQmlPlugin/ComColorSelect 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strColor"; type: "string" }
        Property { name: "dAlpha"; type: "double" }
        Property { name: "bNeedAlpha"; type: "bool" }
        Property { name: "bNeedRecommand"; type: "bool" }
        Signal { name: "sigColorChangeBegin" }
        Signal {
            name: "sigColorInChange"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Signal {
            name: "sigColorChangeOver"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Signal {
            name: "sigAlphaInChange"
            Parameter { name: "alpha"; type: "double" }
        }
        Signal {
            name: "sigAlphaChangeOver"
            Parameter { name: "alpha"; type: "double" }
        }
        Method {
            name: "setColor"
            type: "QVariant"
            Parameter { name: "colorObj"; type: "QVariant" }
            Parameter { name: "alpha"; type: "QVariant" }
        }
    }
    Component {
        prototype: "FMCQColorPanel"
        name: "FMCQmlPlugin/ComColorSelectPanel 1.0"
        exports: ["FMCQmlPlugin/ComColorSelectPanel 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "iconPosX"; type: "int" }
        Property { name: "iconPosY"; type: "int" }
        Signal { name: "sigSelectColorChangeBegin" }
        Signal {
            name: "sigSelectColorInChange"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Signal {
            name: "sigSelectColorOver"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Method { name: "getCurColor"; type: "QVariant" }
        Method {
            name: "changeColorPanelByHsbColor"
            type: "QVariant"
            Parameter { name: "hsbColorObj"; type: "QVariant" }
            Parameter { name: "bChangeOver"; type: "QVariant" }
        }
        Method { name: "notifyShowColorChangeBegin"; type: "QVariant" }
        Method { name: "notifyShowColorInChange"; type: "QVariant" }
        Method { name: "notifyShowColorChangeOver"; type: "QVariant" }
        Method {
            name: "initByColorObj"
            type: "QVariant"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickPopup"
        name: "FMCQmlPlugin/ComColorSelectPopup 1.0"
        exports: ["FMCQmlPlugin/ComColorSelectPopup 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "strStatusKey"; type: "string" }
        Property { name: "bNeedAlpha"; type: "bool" }
        Property { name: "bNeedRecommand"; type: "bool" }
        Signal { name: "sigColorChangeBegin" }
        Signal {
            name: "sigColorInChange"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Signal {
            name: "sigColorChangeOver"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Signal {
            name: "sigAlphaInChange"
            Parameter { name: "alpha"; type: "double" }
        }
        Signal {
            name: "sigAlphaChangeOver"
            Parameter { name: "alpha"; type: "double" }
        }
        Method {
            name: "setParams"
            type: "QVariant"
            Parameter { name: "colorObj"; type: "QVariant" }
            Parameter { name: "alpha"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComColorSelectSetArea 1.0"
        exports: ["FMCQmlPlugin/ComColorSelectSetArea 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Signal {
            name: "sigRGBChanged"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Signal {
            name: "sigAlphaChanged"
            Parameter { name: "alpha"; type: "double" }
        }
        Method { name: "notifyHexChanged"; type: "QVariant" }
        Method { name: "notifyRGBChanged"; type: "QVariant" }
        Method {
            name: "setColor"
            type: "QVariant"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComColorShower 1.0"
        exports: ["FMCQmlPlugin/ComColorShower 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "colorObj"; type: "QVariant" }
        Property { name: "showerColor"; type: "string" }
        Property { name: "bCanPopup"; type: "bool" }
        Signal { name: "entered" }
        Signal { name: "released" }
        Method {
            name: "setAlpha"
            type: "QVariant"
            Parameter { name: "alpha"; type: "QVariant" }
        }
        Method { name: "getAlpha"; type: "QVariant" }
        Method {
            name: "setColor"
            type: "QVariant"
            Parameter { name: "colorObj"; type: "QVariant" }
        }
        Method { name: "getColor"; type: "QVariant" }
        Method { name: "__adjustForeColor"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickComboBox"
        name: "FMCQmlPlugin/ComComboBox 1.0"
        exports: ["FMCQmlPlugin/ComComboBox 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "boxStyle"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "strContentText"; type: "string" }
        Property { name: "popupHeightFitToContent"; type: "QVariant" }
        Property { name: "bOpenPopup"; type: "bool" }
        Property { name: "bHovered"; type: "bool" }
        Property { name: "listModel"; type: "QVariant" }
        Signal {
            name: "sigCurrentIndexChanged"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentIndex"
            type: "QVariant"
            Parameter { name: "nCurrentIndex"; type: "QVariant" }
        }
        Method {
            name: "setIndexByRole"
            type: "QVariant"
            Parameter { name: "strRoleName"; type: "QVariant" }
            Parameter { name: "roleValue"; type: "QVariant" }
        }
        Method {
            name: "getCurValueByRole"
            type: "QVariant"
            Parameter { name: "strRoleName"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickComboBox"
        name: "FMCQmlPlugin/ComComboBox_Style2 1.0"
        exports: ["FMCQmlPlugin/ComComboBox_Style2 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "boxStyle"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "strContentText"; type: "string" }
        Property { name: "popupYOffset"; type: "QVariant" }
        Property { name: "bHovered"; type: "bool" }
        Property { name: "bOpen"; type: "bool" }
        Property { name: "listModel"; type: "QVariant" }
        Signal {
            name: "sigCurrentIndexChanged"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "setCurrentIndex"
            type: "QVariant"
            Parameter { name: "nCurrentIndex"; type: "QVariant" }
        }
        Method {
            name: "setIndexByRole"
            type: "QVariant"
            Parameter { name: "strRoleName"; type: "QVariant" }
            Parameter { name: "roleValue"; type: "QVariant" }
        }
        Method {
            name: "getCurValueByRole"
            type: "QVariant"
            Parameter { name: "strRoleName"; type: "QVariant" }
        }
        Method {
            name: "setComboxCurIndex"
            type: "QVariant"
            Parameter { name: "index"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickComboBox"
        name: "FMCQmlPlugin/ComComboBox_Style5 1.0"
        exports: ["FMCQmlPlugin/ComComboBox_Style5 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "boxStyle"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "strContentText"; type: "string" }
        Property { name: "popupHeightFitToContent"; type: "QVariant" }
        Property { name: "popupMaxHeight"; type: "QVariant" }
        Property { name: "hoverIndex"; type: "QVariant" }
        Property { name: "listModel"; type: "QVariant" }
        Signal {
            name: "sigCurrentIndexChanged"
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "sigCurrentHoverChanged"
            Parameter { name: "index"; type: "int" }
        }
        Signal { name: "sigListViewClosed" }
        Method {
            name: "setCurrentIndex"
            type: "QVariant"
            Parameter { name: "nCurrentIndex"; type: "QVariant" }
        }
        Method {
            name: "setIndexByRole"
            type: "QVariant"
            Parameter { name: "strRoleName"; type: "QVariant" }
            Parameter { name: "roleValue"; type: "QVariant" }
        }
        Method {
            name: "getIndexByRole"
            type: "QVariant"
            Parameter { name: "strRoleName"; type: "QVariant" }
            Parameter { name: "roleValue"; type: "QVariant" }
        }
        Method {
            name: "getCurValueByRole"
            type: "QVariant"
            Parameter { name: "strRoleName"; type: "QVariant" }
        }
        Method { name: "getCurHoverIndex"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComConnectText 1.0"
        exports: ["FMCQmlPlugin/ComConnectText 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "textId1"; type: "QVariant" }
        Property { name: "textId2"; type: "QVariant" }
        Property { name: "strText1"; type: "string" }
        Property { name: "strText2"; type: "string" }
        Property { name: "nMarian2"; type: "double" }
        Property { name: "textSize1"; type: "int" }
        Property { name: "textSize2"; type: "int" }
        Property { name: "text1Color"; type: "QColor" }
        Property { name: "text2Color"; type: "QColor" }
        Property { name: "text1Opacity"; type: "double" }
        Property { name: "text2Opacity"; type: "double" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComDropFileArea 1.0"
        exports: ["FMCQmlPlugin/ComDropFileArea 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "isInDrop"; type: "QVariant" }
        Property { name: "dropStyle"; type: "QVariant" }
        Property { name: "rectColor"; type: "QVariant" }
        Property { name: "rectBorderColor"; type: "QVariant" }
        Property { name: "detailText"; type: "string" }
        Property { name: "buttonText"; type: "string" }
        Signal { name: "sigSelectByFileDialog" }
        Method { name: "onImportButtonClicked"; type: "QVariant" }
        Method {
            name: "onFileDropped"
            type: "QVariant"
            Parameter { name: "urls"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComExpandHead 1.0"
        exports: ["FMCQmlPlugin/ComExpandHead 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strText"; type: "string" }
        Property { name: "isExpand"; type: "bool" }
    }
    Component {
        prototype: "QQuickImage"
        name: "FMCQmlPlugin/ComExplainIcon 1.0"
        exports: ["FMCQmlPlugin/ComExplainIcon 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Signal { name: "hoveredChanged" }
        Signal { name: "entered" }
        Signal { name: "exited" }
    }
    Component {
        prototype: "QQuickPopup"
        name: "FMCQmlPlugin/ComExplainPanel 1.0"
        exports: ["FMCQmlPlugin/ComExplainPanel 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "strText"; type: "string" }
        Property { name: "vx"; type: "int" }
        Property { name: "bDown"; type: "bool" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComIconButton_Style3 1.0"
        exports: ["FMCQmlPlugin/ComIconButton_Style3 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "bPressed"; type: "bool" }
        Property { name: "disabled"; type: "bool" }
        Property { name: "checkResult"; type: "QVariant" }
        Property { name: "bHovered"; type: "bool" }
        Property { name: "iconPath"; type: "QUrl" }
        Signal { name: "sigClicked" }
        Signal { name: "sigEntered" }
        Signal { name: "sigExited" }
        Method { name: "getColor"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickImage"
        name: "FMCQmlPlugin/ComImage 1.0"
        exports: ["FMCQmlPlugin/ComImage 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "hoverEnabled"; type: "bool" }
        Property { name: "hovered"; type: "bool" }
        Signal { name: "clicked" }
        Signal { name: "released" }
        Signal { name: "pressed" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComInformationIcon 1.0"
        exports: ["FMCQmlPlugin/ComInformationIcon 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strText"; type: "string" }
        Property { name: "toolTipWidth"; type: "QVariant" }
        Property { name: "fontColor"; type: "QColor" }
        Signal { name: "urlClicked" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComInformationIcon_Style2 1.0"
        exports: ["FMCQmlPlugin/ComInformationIcon_Style2 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strText"; type: "string" }
        Property { name: "strImgSource"; type: "string" }
        Property { name: "textLeftMargin"; type: "QVariant" }
        Property { name: "textTopMargin"; type: "QVariant" }
        Property { name: "arrowX"; type: "QVariant" }
        Property { name: "explainIconLeftMargin"; type: "QVariant" }
        Property { name: "panelHeight"; type: "QVariant" }
        Property { name: "imgWidth"; type: "QVariant" }
        Property { name: "imgHeight"; type: "QVariant" }
        Property { name: "bDown"; type: "bool" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComInputTextWithDetail 1.0"
        exports: ["FMCQmlPlugin/ComInputTextWithDetail 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strTitleText"; type: "QVariant" }
        Property { name: "strDetailText"; type: "QVariant" }
        Property { name: "strInValidDetailText"; type: "QVariant" }
        Property { name: "markTextValue"; type: "string" }
        Property { name: "isValid"; type: "bool" }
        Property { name: "isFirstInit"; type: "bool" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "textStyle"; type: "QVariant" }
        Signal {
            name: "sigTextInputChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal { name: "sigTextInputFocusIn" }
        Signal { name: "sigTextInputFocusOut" }
        Method {
            name: "setText"
            type: "QVariant"
            Parameter { name: "strText"; type: "QVariant" }
        }
        Method { name: "getText"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComInputTextWithDetail_Style2 1.0"
        exports: ["FMCQmlPlugin/ComInputTextWithDetail_Style2 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strDetailText"; type: "QVariant" }
        Property { name: "strInValidDetailText"; type: "QVariant" }
        Property { name: "markTextValue"; type: "string" }
        Property { name: "isValid"; type: "bool" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "textStyle"; type: "QVariant" }
        Signal {
            name: "sigTextInputChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal { name: "sigTextInputFocusIn" }
        Signal { name: "sigTextInputFocusOut" }
        Method {
            name: "setText"
            type: "QVariant"
            Parameter { name: "strText"; type: "QVariant" }
        }
        Method { name: "getText"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComLabelInput 1.0"
        exports: ["FMCQmlPlugin/ComLabelInput 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "inputLeftMarian"; type: "int" }
        Property { name: "inputName"; type: "string" }
        Property { name: "titleObj"; type: "QVariant" }
        Property { name: "inputObj"; type: "QVariant" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "textColor"; type: "string" }
        Property { name: "contentStr"; type: "string" }
        Property { name: "inputStyle"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComLoading 1.0"
        exports: ["FMCQmlPlugin/ComLoading 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "isRunning"; type: "QVariant" }
        Property { name: "strTip"; type: "string" }
        Method {
            name: "startAfterInterval"
            type: "QVariant"
            Parameter { name: "interval"; type: "QVariant" }
        }
        Method { name: "start"; type: "QVariant" }
        Method { name: "stop"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComMask 1.0"
        exports: ["FMCQmlPlugin/ComMask 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
    }
    Component {
        prototype: "QQuickMenu"
        name: "FMCQmlPlugin/ComMenu 1.0"
        exports: ["FMCQmlPlugin/ComMenu 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "isCloseWhenBegin"; type: "bool" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "style"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickMenuSeparator"
        name: "FMCQmlPlugin/ComMenuSeparator 1.0"
        exports: ["FMCQmlPlugin/ComMenuSeparator 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiBaseComponent 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiBaseComponent 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiColorSelectComponent 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiColorSelectComponent 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "strPropertyKey"; type: "string" }
        Property { name: "strTitle"; type: "string" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setColorObj"
            type: "QVariant"
            Parameter { name: "dataObj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiComboBoxComponent 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiComboBoxComponent 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "strPropertyKey"; type: "string" }
        Property { name: "strTitle"; type: "string" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiOneNumberInputComponent 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiOneNumberInputComponent 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "strPropertyKey"; type: "string" }
        Property { name: "realMinValue"; type: "double" }
        Property { name: "realMaxValue"; type: "double" }
        Property { name: "fixed"; type: "int" }
        Property { name: "step"; type: "double" }
        Property { name: "strTitle"; type: "string" }
        Property { name: "strMarkTextValue"; type: "string" }
        Property { name: "showMinValue"; type: "double" }
        Property { name: "showMaxValue"; type: "double" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setPageValuesByOtherInfos"
            type: "QVariant"
            Parameter { name: "otherInfos"; type: "QVariant" }
        }
        Method {
            name: "setDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiSliderType1Component 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiSliderType1Component 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "strPropertyKey"; type: "string" }
        Property { name: "realMinValue"; type: "double" }
        Property { name: "realMaxValue"; type: "double" }
        Property { name: "showMinValue"; type: "double" }
        Property { name: "showMaxValue"; type: "double" }
        Property { name: "fixed"; type: "int" }
        Property { name: "markText"; type: "string" }
        Property { name: "strTitle"; type: "string" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiSliderType2Component 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiSliderType2Component 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "strPropertyKey"; type: "string" }
        Property { name: "realMaxValue"; type: "double" }
        Property { name: "realMinValue"; type: "double" }
        Property { name: "realFixed"; type: "int" }
        Property { name: "markText"; type: "string" }
        Property { name: "strTitle"; type: "string" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiSubSplitlineComponent 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiSubSplitlineComponent 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiSubTitleComponent 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiSubTitleComponent 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strTitle"; type: "string" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiThreeNumberInput1Component 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiThreeNumberInput1Component 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "strPropertyKey"; type: "string" }
        Property { name: "realMinValue1"; type: "double" }
        Property { name: "realMinValue2"; type: "double" }
        Property { name: "realMinValue3"; type: "double" }
        Property { name: "realMaxValue1"; type: "double" }
        Property { name: "realMaxValue2"; type: "double" }
        Property { name: "realMaxValue3"; type: "double" }
        Property { name: "fixed"; type: "int" }
        Property { name: "step"; type: "double" }
        Property { name: "strTitle"; type: "string" }
        Property { name: "strMarkTextValue1"; type: "string" }
        Property { name: "strMarkTextValue2"; type: "string" }
        Property { name: "strMarkTextValue3"; type: "string" }
        Property { name: "showMinValue1"; type: "double" }
        Property { name: "showMinValue2"; type: "double" }
        Property { name: "showMinValue3"; type: "double" }
        Property { name: "showMaxValue1"; type: "double" }
        Property { name: "showMaxValue2"; type: "double" }
        Property { name: "showMaxValue3"; type: "double" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setPageValuesByOtherInfos"
            type: "QVariant"
            Parameter { name: "otherInfos"; type: "QVariant" }
        }
        Method {
            name: "setDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setNumberInputValue"
            type: "QVariant"
            Parameter { name: "valueObj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiTwoNumberInput1Component 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiTwoNumberInput1Component 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "strPropertyKey"; type: "string" }
        Property { name: "realMinValue1"; type: "double" }
        Property { name: "realMinValue2"; type: "double" }
        Property { name: "realMaxValue1"; type: "double" }
        Property { name: "realMaxValue2"; type: "double" }
        Property { name: "fixed"; type: "int" }
        Property { name: "step"; type: "double" }
        Property { name: "strTitle"; type: "string" }
        Property { name: "strMarkTextValue1"; type: "string" }
        Property { name: "strMarkTextValue2"; type: "string" }
        Property { name: "showMinValue1"; type: "double" }
        Property { name: "showMinValue2"; type: "double" }
        Property { name: "showMaxValue1"; type: "double" }
        Property { name: "showMaxValue2"; type: "double" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setPageValueByOtherInfos"
            type: "QVariant"
            Parameter { name: "otherInfos"; type: "QVariant" }
        }
        Method {
            name: "setDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setNumberInputValue"
            type: "QVariant"
            Parameter { name: "valueObj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiTwoNumberInput2Component 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiTwoNumberInput2Component 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "strPropertyKey1"; type: "string" }
        Property { name: "strPropertyKey2"; type: "string" }
        Property { name: "realMinValue1"; type: "double" }
        Property { name: "realMinValue2"; type: "double" }
        Property { name: "realMaxValue1"; type: "double" }
        Property { name: "realMaxValue2"; type: "double" }
        Property { name: "fixed1"; type: "int" }
        Property { name: "fixed2"; type: "int" }
        Property { name: "step1"; type: "double" }
        Property { name: "step2"; type: "double" }
        Property { name: "strTitle1"; type: "string" }
        Property { name: "strTitle2"; type: "string" }
        Property { name: "strMarkTextValue1"; type: "string" }
        Property { name: "strMarkTextValue2"; type: "string" }
        Property { name: "showMinValue1"; type: "double" }
        Property { name: "showMinValue2"; type: "double" }
        Property { name: "showMaxValue1"; type: "double" }
        Property { name: "showMaxValue2"; type: "double" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setPageValueByOtherInfo0"
            type: "QVariant"
            Parameter { name: "otherInfos"; type: "QVariant" }
        }
        Method {
            name: "setPageValueByOtherInfo1"
            type: "QVariant"
            Parameter { name: "otherInfos"; type: "QVariant" }
        }
        Method {
            name: "setDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
            Parameter { name: "changeIndex"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setNumberInputValue"
            type: "QVariant"
            Parameter { name: "valueObj"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiTwoSlider1Component 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiTwoSlider1Component 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strPropertyKey1"; type: "string" }
        Property { name: "strPropertyKey2"; type: "string" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setTwoSliderDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
            Parameter { name: "changeIndex"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "realMinValue1"; type: "double" }
        Property { name: "realMaxValue1"; type: "double" }
        Property { name: "realMinValue2"; type: "double" }
        Property { name: "realMaxValue2"; type: "double" }
        Property { name: "markText1"; type: "string" }
        Property { name: "markText2"; type: "string" }
        Property { name: "slider1Obj"; type: "QVariant" }
        Property { name: "slider2Obj"; type: "QVariant" }
        Property { name: "strTitle1"; type: "string" }
        Property { name: "strTitle2"; type: "string" }
        Property { name: "showMinValue1"; type: "double" }
        Property { name: "showMaxValue1"; type: "double" }
        Property { name: "showMinValue2"; type: "double" }
        Property { name: "showMaxValue2"; type: "double" }
        Property { name: "fixed1"; type: "int" }
        Property { name: "fixed2"; type: "int" }
        Property { name: "saveFixed1"; type: "QVariant" }
        Property { name: "saveFixed2"; type: "QVariant" }
        Property { name: "slider1Visible"; type: "bool" }
        Property { name: "slider2Visible"; type: "bool" }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiTwoSlider2Component 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiTwoSlider2Component 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strPropertyKey"; type: "string" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setPageValueByOtherInfos"
            type: "QVariant"
            Parameter { name: "otherInfos"; type: "QVariant" }
        }
        Method {
            name: "setTwoSliderDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
            Parameter { name: "changeIndex"; type: "QVariant" }
        }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setSliderValue"
            type: "QVariant"
            Parameter { name: "valueObj"; type: "QVariant" }
        }
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "realMinValue1"; type: "double" }
        Property { name: "realMaxValue1"; type: "double" }
        Property { name: "realMinValue2"; type: "double" }
        Property { name: "realMaxValue2"; type: "double" }
        Property { name: "markText1"; type: "string" }
        Property { name: "markText2"; type: "string" }
        Property { name: "slider1Obj"; type: "QVariant" }
        Property { name: "slider2Obj"; type: "QVariant" }
        Property { name: "strTitle1"; type: "string" }
        Property { name: "strTitle2"; type: "string" }
        Property { name: "showMinValue1"; type: "double" }
        Property { name: "showMaxValue1"; type: "double" }
        Property { name: "showMinValue2"; type: "double" }
        Property { name: "showMaxValue2"; type: "double" }
        Property { name: "fixed1"; type: "int" }
        Property { name: "fixed2"; type: "int" }
        Property { name: "saveFixed1"; type: "QVariant" }
        Property { name: "saveFixed2"; type: "QVariant" }
        Property { name: "slider1Visible"; type: "bool" }
        Property { name: "slider2Visible"; type: "bool" }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComMetaUiTwoSliderBaseCommand 1.0"
        exports: ["FMCQmlPlugin/ComMetaUiTwoSliderBaseCommand 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nPropertyMode"; type: "int" }
        Property { name: "realMinValue1"; type: "double" }
        Property { name: "realMaxValue1"; type: "double" }
        Property { name: "realMinValue2"; type: "double" }
        Property { name: "realMaxValue2"; type: "double" }
        Property { name: "markText1"; type: "string" }
        Property { name: "markText2"; type: "string" }
        Property { name: "slider1Obj"; type: "QVariant" }
        Property { name: "slider2Obj"; type: "QVariant" }
        Property { name: "strTitle1"; type: "string" }
        Property { name: "strTitle2"; type: "string" }
        Property { name: "showMinValue1"; type: "double" }
        Property { name: "showMaxValue1"; type: "double" }
        Property { name: "showMinValue2"; type: "double" }
        Property { name: "showMaxValue2"; type: "double" }
        Property { name: "fixed1"; type: "int" }
        Property { name: "fixed2"; type: "int" }
        Property { name: "saveFixed1"; type: "QVariant" }
        Property { name: "saveFixed2"; type: "QVariant" }
        Property { name: "slider1Visible"; type: "bool" }
        Property { name: "slider2Visible"; type: "bool" }
        Method {
            name: "setPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method {
            name: "setTwoSliderDataToCoreInner"
            type: "QVariant"
            Parameter { name: "needSave"; type: "QVariant" }
            Parameter { name: "changeIndex"; type: "QVariant" }
        }
        Property { name: "compEnable"; type: "bool" }
        Property { name: "propertyTag"; type: "string" }
        Property { name: "bCanSetDataToCore"; type: "bool" }
        Property { name: "nPropertyKey"; type: "int" }
        Method { name: "getTagProperty"; type: "QVariant" }
        Method {
            name: "getPropertyKeyFromObj"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
        }
        Method {
            name: "getPropDescProp"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
            Parameter { name: "index"; type: "QVariant" }
            Parameter { name: "propKey"; type: "QVariant" }
        }
        Method {
            name: "initPageValues"
            type: "QVariant"
            Parameter { name: "obj"; type: "QVariant" }
        }
        Method { name: "canSetDataToCore"; type: "QVariant" }
        Method {
            name: "refreshByProps"
            type: "QVariant"
            Parameter { name: "propObj"; type: "QVariant" }
        }
        Method {
            name: "setDataToCore"
            type: "QVariant"
            Parameter { name: "propertyMode"; type: "QVariant" }
            Parameter { name: "paramObj"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickLoader"
        name: "FMCQmlPlugin/ComMoveTag 1.0"
        exports: ["FMCQmlPlugin/ComMoveTag 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strTagColor"; type: "string" }
        Method { name: "showTag"; type: "QVariant" }
        Method { name: "hideTag"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComNoItemTip 1.0"
        exports: ["FMCQmlPlugin/ComNoItemTip 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "tips"; type: "QVariant" }
        Property { name: "backgroundColor"; type: "QColor" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComNumberInput 1.0"
        exports: ["FMCQmlPlugin/ComNumberInput 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "QVariant" }
        Property { name: "markTextValue"; type: "string" }
        Property { name: "showMarkWnenNotActive"; type: "bool" }
        Property { name: "valueBeforeChanged"; type: "double" }
        Property { name: "value"; type: "double" }
        Property { name: "step"; type: "double" }
        Property { name: "nFixed"; type: "int" }
        Property { name: "active"; type: "bool" }
        Property { name: "textVAlign"; type: "QVariant" }
        Property { name: "textHAlign"; type: "QVariant" }
        Property { name: "bMouseValueChange"; type: "bool" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "nBlockSignal"; type: "int" }
        Property { name: "nTextRightMargin"; type: "int" }
        Property { name: "bIsHovered"; type: "bool" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "textInput"; type: "ComTextInput_QMLTYPE_21"; isReadonly: true; isPointer: true }
        Signal { name: "sigValueChangeBegin" }
        Signal { name: "sigValueChangeOver" }
        Signal { name: "sigValueChanged" }
        Method { name: "increaseValue"; type: "QVariant" }
        Method { name: "decreaseValue"; type: "QVariant" }
        Method { name: "bValueChanged"; type: "QVariant" }
        Method {
            name: "setText"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "getFixedValue"; type: "QVariant" }
        Method {
            name: "blockSignals"
            type: "QVariant"
            Parameter { name: "bBlock"; type: "QVariant" }
        }
        Method { name: "signalIsBlocked"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickPopup"
        name: "FMCQmlPlugin/ComRenameInput 1.0"
        exports: ["FMCQmlPlugin/ComRenameInput 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "strOriText"; type: "string" }
        Property { name: "strNewText"; type: "string" }
        Property { name: "maxLength"; type: "int" }
        Signal {
            name: "sigRenameInputOver"
            Parameter { name: "strNewText"; type: "string" }
        }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComResizeArea 1.0"
        exports: ["FMCQmlPlugin/ComResizeArea 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "nWidth"; type: "int" }
        Property { name: "nHeight"; type: "int" }
        Property { name: "sliderValue"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickImage"
        name: "FMCQmlPlugin/ComRoundImage 1.0"
        exports: ["FMCQmlPlugin/ComRoundImage 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "maskSource"; type: "QUrl" }
    }
    Component {
        prototype: "QQuickScrollBar"
        name: "FMCQmlPlugin/ComScrollBar 1.0"
        exports: ["FMCQmlPlugin/ComScrollBar 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "blockSignals"; type: "bool" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "style"; type: "QVariant" }
        Property { name: "canInteractive"; type: "bool" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComSearchInput 1.0"
        exports: ["FMCQmlPlugin/ComSearchInput 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "textInputId"; type: "QVariant" }
        Property { name: "bSelected"; type: "bool" }
        Property { name: "bButtonClicked"; type: "bool" }
        Property { name: "placeHolder"; type: "string" }
        Signal {
            name: "sigTextInputChanged"
            Parameter { name: "text"; type: "string" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSlider 1.0"
        exports: ["FMCQmlPlugin/ComSlider 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "QVariant" }
        Property { name: "sliderRadius"; type: "QVariant" }
        Property { name: "sliderHeight"; type: "QVariant" }
        Property { name: "value"; type: "double" }
        Property { name: "iconPressed"; type: "bool" }
        Property { name: "iconHovered"; type: "bool" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "defaultIconValue"; type: "double" }
        Property { name: "bHasOriginPoint"; type: "bool" }
        Property { name: "showDefaultIcon"; type: "bool" }
        Signal { name: "sigValueChangeBegin" }
        Signal { name: "sigValueChangeOver" }
        Signal {
            name: "sigValueChange"
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "__fixValue"
            type: "QVariant"
            Parameter { name: "dValue"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderInputText 1.0"
        exports: ["FMCQmlPlugin/ComSliderInputText 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "defaultValue"; type: "double" }
        Property { name: "nFixed"; type: "int" }
        Property { name: "nScale"; type: "double" }
        Property { name: "sliderRadius"; type: "QVariant" }
        Property { name: "sliderHeight"; type: "QVariant" }
        Property { name: "sliderStyle"; type: "QVariant" }
        Property { name: "numberInputStyle"; type: "QVariant" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property {
            name: "numberInput"
            type: "ComNumberInput_QMLTYPE_81"
            isReadonly: true
            isPointer: true
        }
        Property { name: "markText"; type: "string" }
        Property { name: "showDefaultIcon"; type: "bool" }
        Property { name: "defaultIconValue"; type: "double" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "showFixed"; type: "int" }
        Signal { name: "sigValueChangeBegin" }
        Signal {
            name: "sigSliderValueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "sigSliderValueChangedOver"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "getValue"; type: "QVariant" }
        Method { name: "getFixedValue"; type: "QVariant" }
        Method {
            name: "convertValueToText"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderInputTextWithLock 1.0"
        exports: ["FMCQmlPlugin/ComSliderInputTextWithLock 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "currentValue"; type: "QVariant" }
        Property { name: "showText1"; type: "string" }
        Property { name: "showText2"; type: "string" }
        Property { name: "minimumValue1"; type: "double" }
        Property { name: "minimumValue2"; type: "double" }
        Property { name: "sliderMinimumValue1"; type: "double" }
        Property { name: "sliderMinimumValue2"; type: "double" }
        Property { name: "maximumValue1"; type: "double" }
        Property { name: "maximumValue2"; type: "double" }
        Property { name: "sliderMaximumValue1"; type: "double" }
        Property { name: "sliderMaximumValue2"; type: "double" }
        Signal { name: "sigValueChangeBegin" }
        Signal {
            name: "sigValueChanged"
            Parameter { name: "valueLeft"; type: "QVariant" }
            Parameter { name: "valueRight"; type: "QVariant" }
        }
        Signal {
            name: "sigValueChangedOver"
            Parameter { name: "valueLeft"; type: "QVariant" }
            Parameter { name: "valueRight"; type: "QVariant" }
        }
        Method {
            name: "initValue"
            type: "QVariant"
            Parameter { name: "valueRight"; type: "QVariant" }
            Parameter { name: "valueLeft"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "valueRight"; type: "QVariant" }
            Parameter { name: "valueLeft"; type: "QVariant" }
        }
        Method { name: "getValue"; type: "QVariant" }
        Method { name: "getFixedValue"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderInputText_Style1 1.0"
        exports: ["FMCQmlPlugin/ComSliderInputText_Style1 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "defaultValue"; type: "double" }
        Property { name: "nFixed"; type: "int" }
        Property { name: "strText"; type: "string" }
        Property { name: "titleStyle"; type: "QVariant" }
        Property { name: "sliderStyle"; type: "QVariant" }
        Property { name: "numberInputStyle"; type: "QVariant" }
        Property { name: "markText"; type: "string" }
        Property { name: "sliderRadius"; type: "QVariant" }
        Property { name: "sliderHeight"; type: "QVariant" }
        Property { name: "showDefaultIcon"; type: "bool" }
        Property { name: "defaultIconValue"; type: "double" }
        Signal { name: "sigValueChangedBegin" }
        Signal {
            name: "sigValueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "sigValueChangedOver"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "getValue"; type: "QVariant" }
        Method { name: "getFixedValue"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderInputText_Style2 1.0"
        exports: ["FMCQmlPlugin/ComSliderInputText_Style2 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "strText"; type: "string" }
        Property { name: "titleStyle"; type: "QVariant" }
        Property { name: "sliderStyle"; type: "QVariant" }
        Property { name: "numberInputStyle"; type: "QVariant" }
        Property { name: "nFixed"; type: "int" }
        Property { name: "step"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "defaultValue"; type: "double" }
        Property { name: "markTextValue"; type: "string" }
        Signal { name: "sigValueChangedBegin" }
        Signal {
            name: "sigValueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "sigValueChangedOver"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "getValue"; type: "QVariant" }
        Method { name: "getFixedValue"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderInputText_Style3 1.0"
        exports: ["FMCQmlPlugin/ComSliderInputText_Style3 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "defaultValue"; type: "double" }
        Property { name: "nFixed"; type: "int" }
        Property { name: "sliderRadiu"; type: "QVariant" }
        Property { name: "titleStyle"; type: "QVariant" }
        Property { name: "sliderStyle"; type: "QVariant" }
        Property { name: "numberInputStyle"; type: "QVariant" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "sliderMinimumValue"; type: "double" }
        Property { name: "sliderMaximumValue"; type: "double" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "strText"; type: "string" }
        Property { name: "markTextValue"; type: "string" }
        Signal { name: "sigValueChangeBegin" }
        Signal {
            name: "sigValueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "sigValueChangedOver"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "convertValueToText"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "getValue"; type: "QVariant" }
        Method { name: "getFixedValue"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderInputText_Style4 1.0"
        exports: ["FMCQmlPlugin/ComSliderInputText_Style4 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "defaultValue"; type: "double" }
        Property { name: "sliderRadiu"; type: "QVariant" }
        Property { name: "titleStyle"; type: "QVariant" }
        Property { name: "sliderStyle"; type: "QVariant" }
        Property { name: "numberInputStyle"; type: "QVariant" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "nFixed"; type: "int" }
        Property { name: "strText"; type: "string" }
        Property { name: "strMarkText"; type: "string" }
        Signal { name: "sigValueChangeBegin" }
        Signal {
            name: "sigValueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "sigValueChangedOver"
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "valueWhenUndo"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "convertValueToText"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "getValue"; type: "QVariant" }
        Method { name: "getFixedValue"; type: "QVariant" }
        Method {
            name: "getFixedValueV2"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderInputText_Style5 1.0"
        exports: ["FMCQmlPlugin/ComSliderInputText_Style5 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "defaultValue"; type: "double" }
        Property { name: "nSaveFixed"; type: "QVariant" }
        Property { name: "sliderRadiu"; type: "QVariant" }
        Property { name: "titleStyle"; type: "QVariant" }
        Property { name: "sliderStyle"; type: "QVariant" }
        Property { name: "numberInputStyle"; type: "QVariant" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "nFixed"; type: "int" }
        Property { name: "strText"; type: "string" }
        Property { name: "step"; type: "double" }
        Property { name: "strMarkText"; type: "string" }
        Signal { name: "sigValueChangeBegin" }
        Signal {
            name: "sigValueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "sigValueChangedOver"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "convertValueToText"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "getValue"; type: "QVariant" }
        Method { name: "getFixedValue"; type: "QVariant" }
        Method { name: "getShowValue"; type: "QVariant" }
        Method {
            name: "setShowValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderInputText_Style6 1.0"
        exports: ["FMCQmlPlugin/ComSliderInputText_Style6 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "defaultValue"; type: "double" }
        Property { name: "sliderRadiu"; type: "QVariant" }
        Property { name: "sliderStyle"; type: "QVariant" }
        Property { name: "numberInputStyle"; type: "QVariant" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "nFixed"; type: "int" }
        Signal { name: "sigValueChangeBegin" }
        Signal {
            name: "sigValueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "sigValueChangedOver"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "convertValueToText"
            type: "QVariant"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "getValue"; type: "QVariant" }
        Method { name: "getFixedValue"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComSliderV2 1.0"
        exports: ["FMCQmlPlugin/ComSliderV2 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "QVariant" }
        Property { name: "sliderRadius"; type: "QVariant" }
        Property { name: "sliderHeight"; type: "QVariant" }
        Property { name: "halfValue"; type: "double" }
        Property { name: "midValue"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "accuracyValue"; type: "double" }
        Property { name: "value"; type: "double" }
        Property { name: "iconPressed"; type: "bool" }
        Property { name: "iconHovered"; type: "bool" }
        Property { name: "bHasOriginPoint"; type: "bool" }
        Signal { name: "sigValueChangeBegin" }
        Signal { name: "sigValueChangeOver" }
        Signal {
            name: "sigValueChange"
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "__fixValue"
            type: "QVariant"
            Parameter { name: "dValue"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComSplitLine 1.0"
        exports: ["FMCQmlPlugin/ComSplitLine 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "bVertical"; type: "bool" }
    }
    Component {
        prototype: "QQuickText"
        name: "FMCQmlPlugin/ComText 1.0"
        exports: ["FMCQmlPlugin/ComText 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "textSize"; type: "int" }
        Method {
            name: "setText"
            type: "QVariant"
            Parameter { name: "newText"; type: "QVariant" }
        }
        Method { name: "getText"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComTextButton 1.0"
        exports: ["FMCQmlPlugin/ComTextButton 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "__pressed"; type: "bool" }
        Property { name: "strTitle"; type: "string" }
        Signal { name: "sigClicked" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComTextInput 1.0"
        exports: ["FMCQmlPlugin/ComTextInput 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "QVariant" }
        Property { name: "defaultStyle"; type: "QVariant" }
        Property { name: "maxLength"; type: "int" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "placeholder"; type: "string" }
        Property { name: "isHovered"; type: "bool" }
        Property { name: "text"; type: "string" }
        Property { name: "textInputId"; type: "QQuickTextInput"; isReadonly: true; isPointer: true }
        Signal { name: "sigTextInputFocusIn" }
        Signal { name: "sigTextInputFocusOut" }
        Signal {
            name: "sigTextChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setText"
            type: "QVariant"
            Parameter { name: "strText"; type: "QVariant" }
        }
        Method { name: "getText"; type: "QVariant" }
        Method { name: "forceActiveFocus"; type: "QVariant" }
        Method {
            name: "keyOnPressedFilter"
            type: "QVariant"
            Parameter { name: "event"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "FMCQmlPlugin/ComTextInputWithReset 1.0"
        exports: ["FMCQmlPlugin/ComTextInputWithReset 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "bResetButtonEnable"; type: "bool" }
        Property { name: "maxLength"; type: "int" }
        Property { name: "validator"; type: "QVariant" }
        Property { name: "placeholder"; type: "string" }
        Property { name: "style"; type: "QVariant" }
        Signal {
            name: "sigTextChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setText"
            type: "QVariant"
            Parameter { name: "strText"; type: "QVariant" }
        }
        Method { name: "getText"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComTitle 1.0"
        exports: ["FMCQmlPlugin/ComTitle 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "title"; type: "QVariant" }
        Property { name: "tips"; type: "QVariant" }
        Property { name: "expandTips"; type: "QVariant" }
        Property { name: "isExpand"; type: "bool" }
        Property { name: "isShowTips"; type: "bool" }
        Property { name: "isShowExpandTips"; type: "bool" }
        Property { name: "tipsWidth"; type: "QVariant" }
        Property { name: "tipsFontColor"; type: "QColor" }
        Signal { name: "sigInfoIconEntered" }
        Signal { name: "sigInfoIconExited" }
    }
    Component {
        prototype: "QQuickPopup"
        name: "FMCQmlPlugin/ComTooltip 1.0"
        exports: ["FMCQmlPlugin/ComTooltip 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "strText"; type: "string" }
        Property { name: "bDown"; type: "bool" }
        Property { name: "bIsHovered"; type: "bool" }
        Property { name: "arrowX"; type: "QVariant" }
        Property { name: "textLeftMargin"; type: "QVariant" }
        Property { name: "textTopMargin"; type: "QVariant" }
        Property { name: "strImgSource"; type: "QVariant" }
        Property { name: "imgWidth"; type: "QVariant" }
        Property { name: "imgHeight"; type: "QVariant" }
        Property { name: "panelHeight"; type: "QVariant" }
        Property { name: "fontColor"; type: "QColor" }
        Property { name: "fontSize"; type: "int" }
        Signal { name: "urlClicked" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComTransparencyArea 1.0"
        exports: ["FMCQmlPlugin/ComTransparencyArea 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "buttonWidth"; type: "int" }
        Property { name: "bOpenPopup"; type: "bool" }
        Property { name: "alpha"; type: "double" }
        Signal {
            name: "sigTransparencyChanged"
            Parameter { name: "value"; type: "double" }
            Parameter { name: "over"; type: "bool" }
        }
        Method {
            name: "updateAlphaValue"
            type: "QVariant"
            Parameter { name: "alpha"; type: "QVariant" }
        }
        Method { name: "resetArea"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "FMCQmlPlugin/ComTriCheckBox 1.0"
        exports: ["FMCQmlPlugin/ComTriCheckBox 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "checkName"; type: "string" }
        Property { name: "srcCheckImage"; type: "string" }
        Property { name: "srcUnCheckedImage"; type: "string" }
        Property { name: "srcPartCheckedImage"; type: "string" }
        Property { name: "textColor"; type: "string" }
        Property { name: "bEnable"; type: "bool" }
        Property { name: "nIndex"; type: "int" }
        Property { name: "checkState"; type: "int" }
        Signal { name: "clicked" }
        Method { name: "adjustCheckState"; type: "QVariant" }
    }
}
